using System;

/*
 ЗАДАНИЕ:
 Описать алгоритм сортировки массива из печатных ASCII символов, позволяющий упорядочить этот массив по алфавиту

 РЕШЕНИЕ:
1. Создаем временную переменную;
2. Создаем цикл с количеством итераций равным размеру массива каждый раз уменьшая его на 1, тем самым сдвигая его ближе к началу;
3. Создаем вложенный цикл в котором перебираем все элементы от первого до последнего в массиве;
4. Сравниваем код текущего элемента с кодом следующего в массиве;
5. Если текущий элемент больше следующего, запоминаем значение текущего элемента во временной переменной
6. Записываем на его место значение следующего за ним элемента;
7. Вставляем из временной переменной значение на место следующего элемента, тем самым меняем их местами;
8. По завершению циклов, массив будет отсортирован в алфавитном порядке по возрастанию.
 */

namespace Buble_ASCII_sort {
    internal class Program {
        static void Main(string[] args) {
            Console.Write("Задайте размер массива: ");
            int n;
            n = Int32.Parse(Console.ReadLine());
            Console.Write("Введите значения массива через пробел: ");
            char[] arr = new char[n]; // Создаем массив
            string[] s = Console.ReadLine().Split(' ');

            for (int i = 0; i < n; i++) { // Заполняем массив данными
                arr[i] = char.Parse(s[i]);
            }

            Console.WriteLine($"Массив содержит {n} несортированных элемента (-ов):");
            foreach (var item in arr) {
                Console.Write(item + " "); // Просто, выводим созданный массив в консоль для информации
            }

            // Метод сортировки "пузырьками"

            char temp;  // временная переменная
            // перебираем массив до предпоследнего элемента, каждый раз сдвигая его ближе к началу
            for (int j = arr.Length - 1; j > 0; j--) {
                // перебираем все элементы от первого до последнего в массиве
                for (int i = 0; i < j; i++) {
                    // если текущий элемент больше следующего
                    if ((int)arr[i] > (int)arr[i + 1]) {
                        // запоминаем значение текущего элемента
                        temp = arr[i];
                        // записываем на его место значение следующего
                        arr[i] = arr[i + 1];
                        // а на место следующего ставим значение текущего, тем самым меняем их местами
                        arr[i + 1] = temp;
                    }
                }
            }

            Console.WriteLine("");
            Console.WriteLine("Отсортированный массив по возрастанию:");
            
            foreach (var item in arr) {
                Console.Write(item + " ");
            }
        }
    }
}
